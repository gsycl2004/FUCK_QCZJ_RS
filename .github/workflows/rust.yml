name: Build

on:
  push:
    branches: [ master ]

jobs:
  test-and-build:
    strategy:
      fail-fast: false
      matrix:
        target:
          - { name: Linux-x64-GNU, os: ubuntu-latest, tool: x86_64-unknown-linux-gnu }
          - { name: macOS-x64, os: macos-latest, tool: x86_64-apple-darwin }
          - { name: Windows-x64, os: windows-latest, tool: x86_64-pc-windows-msvc }

    name: ${{ matrix.target.name }}
    runs-on: ${{ matrix.target.os }}

    env:
      CI: 1
      CARGO_INCREMENTAL: 0
      windows: ${{ startsWith(matrix.target.name, 'Windows') }}
      linux: ${{ startsWith(matrix.target.name, 'Linux') }}

    steps:
      - uses: actions/checkout@v3

      - if: ${{ endsWith(matrix.target.tool, 'musl') }}
        run: sudo apt install -y musl-tools musl-dev

      - name: Install rust toolchain
        run: |
          rustup default nightly
          rustup target add ${{ matrix.target.tool }}

      - name: Cache
        uses: Swatinem/rust-cache@v2

      - name: Build
        run: cargo build --target ${{ matrix.target.tool }}

      - name: Upload
        if: env.windows != 'true'
        uses: actions/upload-artifact@v3
        with:
          name: FUCK_QCZJ-${{ matrix.target.tool }}
          path: target/${{ matrix.target.tool }}/debug/FUCK_QCZJ

      - name: Upload exe
        if: env.windows == 'true'
        uses: actions/upload-artifact@v3
        with:
          name: FUCK_QCZJ-${{ matrix.target.tool }}.exe
          path: target/${{ matrix.target.tool }}/debug/FUCK_QCZJ.exe
